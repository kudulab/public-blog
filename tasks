#!/bin/bash

set -Eeuo pipefail

RELEASER_VERSION="2.1.0"
SECRET_OPS_VERSION="0.6.2"

SECRET_OPS_FILE="ops/secret-ops"
SECRET_OPS_TAR_FILE="ops/secret-ops-${SECRET_OPS_VERSION}.tar.gz"
RELEASER_FILE="ops/releaser-${RELEASER_VERSION}"

mkdir -p ops
if [[ ! -f $RELEASER_FILE ]];then
  wget --quiet -O $RELEASER_FILE https://github.com/kudulab/releaser/releases/download/${RELEASER_VERSION}/releaser
fi
source $RELEASER_FILE
if [[ ! -f $SECRET_OPS_TAR_FILE ]];then
  wget --quiet -O $SECRET_OPS_TAR_FILE https://github.com/kudulab/secret-ops/releases/download/${SECRET_OPS_VERSION}/secret-ops.tar.gz
  tar -xf $SECRET_OPS_TAR_FILE -C ops
fi
source $SECRET_OPS_FILE

KUDU_SERVICE="www"

function read_from_vault_or_die {
  local vault_key=$1
  local field=$2
  echo "Trying to read from vault: ${vault_key}." >&2
  if [ -z "$VAULT_TOKEN" ]; then
    echo "Failed reading from vault: VAULT_TOKEN is not set." >&2
    exit 1
  fi
  if [ -z "$VAULT_ADDR" ]; then
    echo "Failed reading from vault: VAULT_ADDR is not set." >&2
    exit 1
  fi
  vault kv get --field=$field secret/gocd/${vault_key}
  if [ $? != 0 ]; then
    echo "Failed reading from vault: ${vault_key}" >&2
    exit 1
  else
    echo "Successfully read from vault: ${vault_key}" >&2
  fi
}

function tf_ops {
  operation=$1

  cd terraform/
  terraform init -backend-config path=terraform/kudu-${KUDU_SERVICE}
  if [[ "${operation}" == "create" ]]; then
    terraform plan -out="kudu_deployment.tfplan"
  elif [[ "${operation}" == "destroy" ]]; then
    terraform plan -out="kudu_deployment.tfplan" -destroy
  fi
  terraform apply kudu_deployment.tfplan
}

command="$1"
case "${command}" in
  _set_dns)
      tf_ops "create"
      ;;
  set_dns)
      # AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY from vault
      export AWS_ACCESS_KEY_ID=$(read_from_vault_or_die "aws" "access_key_id")
      export AWS_SECRET_ACCESS_KEY=$(read_from_vault_or_die "aws" "secret_access_key")
      dojo -c terraform/Dojofile "./tasks _set_dns"
      ;;
  generate_vault_token)
      vault_token=$(vault token create -orphan -renewable=true -period=72h -policy=gocd -field token -metadata gocd_renew=true)
      secured_token_gocd=$(secret_ops::encrypt_with_gocd_top "${vault_token}")
      echo "Generated token: ${vault_token} and encrypted by GoCD server"
      secret_ops::insert_vault_token_gocd_yaml "${secured_token_gocd}"
      ;;
  set_version)
      set +u
      releaser::bump_changelog_version "$2" "$3"
      ;;
  live_preview)
      cd src
      dojo "hugo server -D --bind 0.0.0.0 --baseURL http://workstation:1313"
      ;;
  generate)
      if [[ -z "${KUDU_ENVIRONMENT}" ]]; then
        echo "KUDU_ENVIRONMENT is not set"
        exit 1
      fi
      if [[ "${KUDU_ENVIRONMENT}" == "development" ]]; then
        base_url="//workstation:8088/"
      elif [[ "${KUDU_ENVIRONMENT}" == "testing" ]]; then
        base_url="//localhost:8088/"
      elif [[ "${KUDU_ENVIRONMENT}" == "production" ]]; then
        base_url="https://kudulab.io/"
      else
        echo "Unsupported KUDU_ENVIRONMENT=${KUDU_ENVIRONMENT}, exit 1"
        exit 1
      fi
      cd src
      rm -rf public/*
      dojo "hugo --baseUrl=${base_url}"
      ;;
  demo_host)
      docker run -d -p 8088:80 --name www-host\
        -v "${PWD}/src/public":/usr/local/apache2/htdocs/\
        httpd:2.4.29-alpine
      ;;
  test)
      time bats "$(pwd)/test/integration/bats"
      ;;
  cleanup)
      docker stop www-host; docker rm www-host
      ;;
  release)
      releaser::verify_release_ready
      releaser::git_tag_from_changelog
      ;;
  publish)
      git_ref=$(git log -1 --pretty='format:%H')
      git clone git@github.com:kudulab/kudulab.github.io.git kudulab.github.io
      cd kudulab.github.io
      # remove everything but for .git directory
      for a_file in *; do
        rm -rf "${a_file}"
      done
      cp -r ../src/public/* .
      echo "kudulab.io" > CNAME
      git add .
      git commit -m "generated from git ref: ${git_ref}" || true
      git push
      ;;
  *)
      echo "Invalid command: '${command}'"
      exit 1
      ;;
esac
set +e
